{"version":3,"sources":["Header.js","CreateRecipeDialogBox.js","Recipe.js","RecipeList.js","GreyOutBox.js","NoRecipesBanner.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","onClick","handleOpenDialogBox","CreateRecipeDialogBox","handleInputChange","e","setState","target","name","value","handleCloseDialogBox","ingredients","ingredient","instructions","img_url","handleAddIngredientClick","preventDefault","state","push","checkAddIngredientInput","handleCreateRecipe","recipe","this","showDialogBox","onSubmit","type","onChange","rows","cols","map","i","key","readOnly","placeholder","React","Component","Recipe","src","alt","handleDeleteRecipe","RecipeList","recipes","id","GreyOutBox","showGreyOutBox","NoRecipesBanner","length","App","nextRecipeId","recipeToRemove","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75ab746c.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__page-title\">Recipe App</h1>\n      <nav className=\"header__nav\">\n        <ol className=\"header__nav-list\">\n          <li className=\"header__nav-item\" onClick={props.handleOpenDialogBox}>New Recipe</li>\n          <li className=\"header__nav-item\">Home</li>\n          <li className=\"header__nav-item\">About</li>\n          <li className=\"header__nav-item\">Contact</li>\n        </ol>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './CreateRecipeDialogBox.css';\n\nclass CreateRecipeDialogBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      ingredients: [],\n      ingredient: '',\n      instructions: '',\n      img_url: '',\n    };\n  }\n\n  handleInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleCloseDialogBox = e => {\n    this.setState({\n      name: '',\n      ingredients: [],\n      ingredient: '',\n      instructions: '',\n      img_url: '',\n    });\n    this.props.handleCloseDialogBox(e);\n  };\n\n  handleAddIngredientClick = e => {\n    e.preventDefault();\n    this.setState(state => {\n      state.ingredients.push(state.ingredient);\n      state.ingredient = '';\n      return state;\n    });\n  };\n\n  checkAddIngredientInput = () => {\n    this.setState(state => {\n      state.ingredients.push(state.ingredient);\n      state.ingredient = '';\n      return state;\n    })\n  };\n\n  handleCreateRecipe = e => {\n    e.preventDefault();\n    this.checkAddIngredientInput();\n    const recipe = {\n      name: this.state.name,\n      ingredients: this.state.ingredients,\n      instructions: this.state.instructions,\n      img_url: this.state.img_url,\n    };\n    this.setState({\n      name: '',\n      ingredients: [],\n      ingredient: '',\n      instructions: '',\n      img_url: '',\n    });\n    this.props.handleCreateRecipe(e, recipe);\n  };\n\n  render() {\n    if (!this.props.showDialogBox) {\n      return null;\n    }\n    \n    return (\n      <form className=\"create-recipe-dialog-box\" onSubmit={this.handleCreateRecipe}>\n        <span className=\"create-recipe-dialog-box__close-btn btn\" onClick={this.handleCloseDialogBox}>x</span>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Recipe Name:\n          <input \n            className=\"create-recipe-dialog-box__text-input\" \n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            name=\"name\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Instructions:\n          <textarea \n            rows=\"10\" \n            cols=\"40\" \n            className=\"create-recipe-dialog-box__recipe-instructions\"\n            value={this.state.instructions}\n            onChange={this.handleInputChange}\n            name=\"instructions\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Ingredients:\n          <ol className=\"create-recipe-dialog-box__ingredients-list\">\n            {this.state.ingredients.map((ingredient, i) => (\n              <li key={i}><input className=\"create-recipe-dialog-box__text-input\" type=\"text\" value={ingredient} readOnly={true} /></li>  \n            ))}\n            <li>\n              <input \n                className=\"create-recipe-dialog-box__text-input\" \n                type=\"text\" \n                placeholder=\"Ingredient\"\n                value={this.state.ingredient}\n                onChange={this.handleInputChange}\n                name=\"ingredient\"\n              />\n            </li>\n          </ol>\n          <button className=\"btn\" onClick={this.handleAddIngredientClick}>+</button><span className=\"create-recipe-dialog-box__add-ingredient-btn-text\">Add Ingredient</span>\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Image Url:\n          <input \n            className=\"create-recipe-dialog-box__text-input\" \n            type=\"text\" \n            value={this.state.img_url}\n            onChange={this.handleInputChange}\n            name=\"img_url\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          <input \n            className=\"create-recipe-dialog-box__submit-btn btn\" \n            type=\"submit\" \n            value=\"Save Recipe\" \n          />\n        </label>\n      </form>\n    );\n  }\n  \n}\n\nexport default CreateRecipeDialogBox;","import React from 'react';\nimport './Recipe.css';\n\nfunction Recipe(props) {\n\n  function handleDeleteRecipe(e) {\n    props.handleDeleteRecipe(props.recipe);\n  }\n\n  return (\n    <li className=\"recipe-card\">\n      <img className=\"recipe-card__img\" src={props.recipe.img_url} alt={props.recipe.name}/>\n      <div className=\"recipe-card__content\">\n        <h2>{props.recipe.name}</h2>\n        <h3>Ingredients:</h3>\n        <ul>\n          {props.recipe.ingredients.map(ingredient => <li key={ingredient}>{ingredient}</li>)}\n        </ul>\n        <h3>Instructions:</h3>\n        <p>{props.recipe.instructions}</p>\n        <button onClick={handleDeleteRecipe}>Delete Recipe</button>\n      </div>\n    </li>\n  );\n}\n\nexport default Recipe;","import React from 'react';\nimport Recipe from './Recipe';\nimport './RecipeList.css';\n\nfunction RecipeList(props) {\n  return (\n    <ul className=\"recipe-list\">\n      {props.recipes.map(recipe => <Recipe key={recipe.id} recipe={recipe} handleDeleteRecipe={props.handleDeleteRecipe} />)}\n    </ul>\n  );\n}\n\nexport default RecipeList;","import React from 'react';\nimport './GreyOutBox.css';\n\nfunction GreyOutBox(props) {\n  if (!props.showGreyOutBox) return null;\n  return <div className=\"grey-out-box\"></div>;\n}\n\nexport default GreyOutBox;","import React from 'react';\nimport './NoRecipesBanner.css';\n\nfunction NoRecipesBanner(props) {\n  if (props.recipes.length) return null;\n  return <div className=\"banner\">No recipes found. Click the 'New Recipe' link in the nav menu to add a recipe.</div>;\n}\n\nexport default NoRecipesBanner;","import React from 'react';\nimport Header from './Header';\nimport CreateRecipeDialogBox from './CreateRecipeDialogBox';\nimport RecipeList from './RecipeList';\nimport GreyOutBox from './GreyOutBox';\nimport NoRecipesBanner from './NoRecipesBanner';\nimport './App.css';\n\nconst recipes = [\n  {\n    id: 1,\n    img_url: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/homemade-spaghetti-sauce-horizontal-1530890913.jpg',\n    name: 'Spaghetti',\n    ingredients: [\n      'Pasta Sauce',\n      'Noodles',\n      'Parmesean Cheese',\n    ],\n    instructions: 'Open jar of sauce. Begin to simmer water. Boil water. Cook pasta until tender. Combine pasta and sauce.',\n  },\n  {\n    id: 2,\n    img_url: 'https://www.papajohns.com/static-assets/a/images/web/product/pizzas/sausage-slate-compressed.jpg',\n    name: 'Pizza',\n    ingredients: [\n      'Sauce',\n      'Cheese',\n      'Pepperoni',\n    ],\n    instructions: 'Call Papa Johns. Browse NetFlix for a movie to watch while eating pizza. Pay the pizza delivery person. Fat out.',\n  }\n];\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      showDialogBox: false,\n      recipes: recipes,\n      nextRecipeId: recipes.length + 1,\n    };\n  }\n\n  handleOpenDialogBox = e => {\n    this.setState({ showDialogBox: true});\n  };\n\n  handleCloseDialogBox = e => {\n    this.setState({ showDialogBox: false });\n  };\n\n  handleCreateRecipe = (e, recipe) => {\n    e.preventDefault();\n    this.setState(state => {\n      recipe.id = state.nextRecipeId++;\n      state.recipes.push(recipe);\n      state.showDialogBox = false;\n      return state;\n    });\n  };\n\n  handleDeleteRecipe = recipeToRemove => {\n    this.setState(state => {\n      state.recipes = state.recipes.filter(recipe => recipe.name !== recipeToRemove.name);\n      return state;\n    });\n  };\n\n  render() { \n    return (\n      <div>\n        <GreyOutBox showGreyOutBox={this.state.showDialogBox}/>\n        <div className=\"app\">\n          <Header \n            handleOpenDialogBox={this.handleOpenDialogBox}\n          />\n          <CreateRecipeDialogBox \n            showDialogBox={this.state.showDialogBox}\n            handleCloseDialogBox={this.handleCloseDialogBox}\n            handleCreateRecipe={this.handleCreateRecipe}\n          />\n          <RecipeList \n            recipes={this.state.recipes}\n            handleDeleteRecipe={this.handleDeleteRecipe}\n          />\n          <NoRecipesBanner recipes={this.state.recipes} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
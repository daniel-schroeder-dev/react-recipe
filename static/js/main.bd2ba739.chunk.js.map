{"version":3,"sources":["Header.js","CreateRecipeDialogBox.js","Recipe.js","RecipeList.js","GreyOutBox.js","NoRecipesBanner.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","onClick","handleOpenDialogBox","CreateRecipeDialogBox","handleInputChange","e","setState","target","name","value","handleCloseDialogBox","ingredients","ingredient","instructions","img_url","handleAddIngredientClick","state","push","handleCreateRecipe","preventDefault","recipe","onSubmit","this","type","onChange","rows","cols","map","i","key","readOnly","placeholder","React","Component","Recipe","src","alt","handleDeleteRecipe","id","RecipeList","recipes","GreyOutBox","NoRecipesBanner","App","showDialogBox","nextRecipeId","filter","length","createRecipeDialogBox","greyOutBox","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd2ba739.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__page-title\">Recipe App</h1>\n      <nav className=\"header__nav\">\n        <ol className=\"header__nav-list\">\n          <li className=\"header__nav-item\" onClick={props.handleOpenDialogBox}>New Recipe</li>\n        </ol>\n      </nav>\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  handleOpenDialogBox: PropTypes.func.isRequired,\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CreateRecipeDialogBox.css';\n\nclass CreateRecipeDialogBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      ingredients: [],\n      ingredient: '',\n      instructions: '',\n      img_url: '',\n    };\n  }\n\n  handleInputChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleCloseDialogBox = () => {\n    this.setState({\n      name: '',\n      ingredients: [],\n      ingredient: '',\n      instructions: '',\n      img_url: '',\n    });\n    this.props.handleCloseDialogBox();\n  };\n\n  handleAddIngredientClick = () => {\n    this.setState((state, props) => {\n      const ingredients = [...state.ingredients];\n      ingredients.push(state.ingredient);\n      return { ingredients, ingredient: '' };\n    });\n  };\n\n  handleCreateRecipe = e => {\n    \n    e.preventDefault();\n    \n    this.setState((state, props) => {\n  \n      const recipe = {\n        name: state.name,\n        ingredients: [...state.ingredients, state.ingredient],\n        instructions: state.instructions,\n        img_url: state.img_url,\n      };\n    \n      props.handleCreateRecipe(recipe);\n    \n      return {\n        name: '',\n        ingredients: [],\n        ingredient: '',\n        instructions: '',\n        img_url: '',\n      };\n    \n    });\n  \n  };\n\n  render() {\n    return (\n      <form className=\"create-recipe-dialog-box\" onSubmit={this.handleCreateRecipe}>\n        <span className=\"create-recipe-dialog-box__close-btn btn\" onClick={this.handleCloseDialogBox}>x</span>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Recipe Name:\n          <input \n            className=\"create-recipe-dialog-box__text-input\" \n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            name=\"name\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Instructions:\n          <textarea \n            rows=\"10\" \n            cols=\"40\" \n            className=\"create-recipe-dialog-box__recipe-instructions\"\n            value={this.state.instructions}\n            onChange={this.handleInputChange}\n            name=\"instructions\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Ingredients:\n          <ol className=\"create-recipe-dialog-box__ingredients-list\">\n            {this.state.ingredients.map((ingredient, i) => (\n              <li key={i}><input className=\"create-recipe-dialog-box__text-input\" type=\"text\" value={ingredient} readOnly={true} /></li>  \n            ))}\n            <li>\n              <input \n                className=\"create-recipe-dialog-box__text-input\" \n                type=\"text\" \n                placeholder=\"Ingredient\"\n                value={this.state.ingredient}\n                onChange={this.handleInputChange}\n                name=\"ingredient\"\n              />\n            </li>\n          </ol>\n          <button className=\"btn\" type=\"button\" onClick={this.handleAddIngredientClick}>+</button><span className=\"create-recipe-dialog-box__add-ingredient-btn-text\">Add Ingredient</span>\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          Image Url:\n          <input \n            className=\"create-recipe-dialog-box__text-input\" \n            type=\"text\" \n            value={this.state.img_url}\n            onChange={this.handleInputChange}\n            name=\"img_url\"\n          />\n        </label>\n        <label className=\"create-recipe-dialog-box__form-element\">\n          <input \n            className=\"create-recipe-dialog-box__submit-btn btn\" \n            type=\"submit\" \n            value=\"Save Recipe\" \n          />\n        </label>\n      </form>\n    );\n  }\n  \n}\n\nCreateRecipeDialogBox.propTypes = {\n  handleCloseDialogBox: PropTypes.func.isRequired,\n  handleCreateRecipe: PropTypes.func.isRequired,\n};\n\nexport default CreateRecipeDialogBox;","import React from 'react';\nimport './Recipe.css';\n\nfunction Recipe(props) {\n\n  function handleDeleteRecipe(e) {\n    props.handleDeleteRecipe(props.recipe.id);\n  }\n\n  return (\n    <li className=\"recipe-card\">\n      <img className=\"recipe-card__img\" src={props.recipe.img_url} alt={props.recipe.name}/>\n      <div className=\"recipe-card__content\">\n        <h2>{props.recipe.name}</h2>\n        <h3>Ingredients:</h3>\n        <ul>\n          {props.recipe.ingredients.map(ingredient => <li key={ingredient}>{ingredient}</li>)}\n        </ul>\n        <h3>Instructions:</h3>\n        <p>{props.recipe.instructions}</p>\n        <button className=\"recipe-card__btn\" onClick={handleDeleteRecipe}>Delete Recipe</button>\n      </div>\n    </li>\n  );\n}\n\nexport default Recipe;","import React from 'react';\nimport Recipe from './Recipe';\nimport PropTypes from 'prop-types';\nimport './RecipeList.css';\n\nfunction RecipeList(props) {\n  return (\n    <ul className=\"recipe-list\">\n      {props.recipes.map(recipe => <Recipe key={recipe.id} recipe={recipe} handleDeleteRecipe={props.handleDeleteRecipe} />)}\n    </ul>\n  );\n}\n\nRecipeList.propTypes = {\n  recipes: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleDeleteRecipe: PropTypes.func.isRequired,\n};\n\nexport default RecipeList;","import React from 'react';\nimport './GreyOutBox.css';\n\nfunction GreyOutBox(props) {\n  return <div className=\"grey-out-box\"></div>;\n}\n\nexport default GreyOutBox;","import React from 'react';\nimport './NoRecipesBanner.css';\n\nfunction NoRecipesBanner(props) {\n  return <div className=\"banner\">No recipes found. Click the 'New Recipe' link in the nav menu to add a recipe.</div>;\n}\n\nexport default NoRecipesBanner;","import React from 'react';\nimport Header from './Header';\nimport CreateRecipeDialogBox from './CreateRecipeDialogBox';\nimport RecipeList from './RecipeList';\nimport GreyOutBox from './GreyOutBox';\nimport NoRecipesBanner from './NoRecipesBanner';\nimport './App.css';\n\nconst recipes = [\n  {\n    id: 1,\n    img_url: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/homemade-spaghetti-sauce-horizontal-1530890913.jpg',\n    name: 'Spaghetti',\n    ingredients: [\n      'Pasta Sauce',\n      'Noodles',\n      'Parmesean Cheese',\n    ],\n    instructions: 'Open jar of sauce. Begin to simmer water. Boil water. Cook pasta until tender. Combine pasta and sauce.',\n  },\n  {\n    id: 2,\n    img_url: 'https://www.papajohns.com/static-assets/a/images/web/product/pizzas/sausage-slate-compressed.jpg',\n    name: 'Pizza',\n    ingredients: [\n      'Sauce',\n      'Cheese',\n      'Pepperoni',\n    ],\n    instructions: 'Call Papa Johns. Browse NetFlix for a movie to watch while eating pizza. Pay the pizza delivery person. Fat out.',\n  }\n];\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      showDialogBox: false,\n      recipes: recipes,\n      nextRecipeId: recipes.length + 1,\n    };\n  }\n\n  handleOpenDialogBox = e => {\n    this.setState({ showDialogBox: true});\n  };\n\n  handleCloseDialogBox = () => {\n    this.setState({ showDialogBox: false });\n  };\n\n  handleCreateRecipe = recipe => {\n\n    this.setState((state, props) => {\n\n      const recipes = [...state.recipes];\n\n      recipe.id = state.nextRecipeId;\n      recipes.push(recipe);\n      \n      return { \n        recipes, \n        nextRecipeId: state.nextRecipeId + 1, \n        showDialogBox: false,\n      };\n    \n    });\n\n  };\n\n  handleDeleteRecipe = id => {\n    this.setState((state, props) => {\n      let recipes = [...state.recipes];\n      recipes = recipes.filter(recipe => recipe.id !== id);\n      return { recipes };\n    });\n  };\n\n  render() { \n\n    let createRecipeDialogBox = null;\n    let greyOutBox = null;\n\n    if (this.state.showDialogBox) {\n      createRecipeDialogBox = (\n        <CreateRecipeDialogBox \n          handleCloseDialogBox={this.handleCloseDialogBox}\n          handleCreateRecipe={this.handleCreateRecipe}\n        />\n      );\n      greyOutBox = (\n        <GreyOutBox />\n      );\n    }\n\n    return (\n      <div>\n        {greyOutBox}\n        <div className=\"app\">\n          <Header \n            handleOpenDialogBox={this.handleOpenDialogBox}\n          />\n          {createRecipeDialogBox}\n          <RecipeList \n            recipes={this.state.recipes}\n            handleDeleteRecipe={this.handleDeleteRecipe}\n          />\n          {!this.state.recipes.length && <NoRecipesBanner />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}